1. https://drive.google.com/file/d/1pWAuI3mv7-z32_X22zZJvbTNsKdyGHwX/view?usp=sharing

2. returns the namefirst and namelast fields of the people
-- along with the inducted field from the hof_inducted table

SELECT namefirst, namelast, hi.inducted
FROM people p
LEFT OUTER JOIN hof_inducted hi
ON p.playerid = hi.playerid;

3. returns the yearid, playerid, teamid, and salary fields from the salaries table,
-- along with the category field from the hof_inducted table. 
-- Keep only the records that are in both salaries and hof_inducted

SELECT s.yearid, s.playerid, teamid, salary, category
FROM salaries s
INNER JOIN hof_inducted hi
ON s.playerid = hi.playerid;

4. returns the playerid, yearid, teamid, lgid, and salary fields from the salaries table 
-- and the inducted field from the hof_inducted table. 
-- Keep all records from both tables.

SELECT s.playerid, s.yearid, teamid, s.lgid, salary, hi.inducted
FROM salaries s
FULL OUTER JOIN hof_inducted hi
ON s.playerid = hi.playerid;

5. (1) --Combine hof_inducted & hof_not_inducted tables by all fields. Keep all records.
SELECT * FROM hof_inducted
UNION
SELECT * FROM hof_not_inducted;
    (2) --Get a distinct list of all player IDs for players who have been put up for HOF induction
SELECT playerid FROM hof_inducted
UNION
SELECT playerid FROM hof_not_inducted;

6. --returns the last name, first name (see people table), 
-- and total recorded salaries for all players found in the salaries table

SELECT p.namelast, p.namefirst, SUM(s.salary) AS total_salary
FROM salaries s INNER JOIN people p
ON s.playerid = p.playerid
GROUP BY 1, 2;

7. returns all records from the hof_inducted and hof_not_inducted tables 
-- that include playerid, yearid, namefirst, and namelast.

SELECT hi.playerid, hi.yearid, p.namelast, p.namefirst
FROM hof_inducted hi LEFT OUTER JOIN people p
ON hi.playerid = p.playerid
UNION
SELECT hni.playerid, hni.yearid, p.namelast, p.namefirst
FROM hof_not_inducted hni LEFT OUTER JOIN people p
ON hni.playerid = p.playerid;

8. records from both hof_inducted and hof_not_inducted, and include a new field, namefull, 
-- which is formatted as namelast, namefirst. The query should also return the yearid and inducted fields. 
-- Include only records since 1980 from both tables. Sort the resulting table by yearid, then inducted so
-- that Y comes before N. Finally, sort by the namefull field, A to Z.

SELECT hi.playerid, hi.yearid, hi.inducted,
    CONCAT('p.namelast', ',', 'p.namefirst') AS namefull
FROM hof_inducted hi 
    LEFT OUTER JOIN people p ON hi.playerid = p.playerid
WHERE yearid >= 1980
UNION
SELECT hni.playerid, hni.yearid, hni.inducted,
    CONCAT(p.namelast, ', ', p.namefirst) AS namefull
FROM hof_not_inducted hni
    LEFT OUTER JOIN people p ON hni.playerid = p.playerid
WHERE yearid >= 1980
ORDER BY 2, 3, 4;

9. returns each year's highest annual salary for each teamid, 
 -- ranked from high to low, along with the corresponding playerid. 
-- Bonus! Return namelast and namefirst in the resulting table.

WITH max AS (
    SELECT MAX(salary) AS max_salary, teamid, yearid
    FROM salaries s
    GROUP BY 2, 3
)
SELECT s.yearid, s.teamid, s.playerid, p.namelast, p.namefirst, max.max_salary
FROM salaries s 
    LEFT OUTER JOIN people p ON s.playerid = p.playerid
    RIGHT OUTER JOIN max ON s.teamid = max.teamid 
        AND s.yearid = max.yearid
        AND s.salary = max.max_salary
ORDER BY 6 DESC;

10. Select birthyear, deathyear, namefirst, and namelast of all the players born since the birth year of
-- Babe Ruth (playerid = ruthba01). Sort the results by birth year from low to high

SELECT birthyear, deathyear, namefirst, namelast
FROM people 
WHERE birthyear > ANY
    (SELECT birthyear
    FROM people 
    WHERE playerid = 'ruthba01')
ORDER BY birthyear;

11. from people table, return namefirst, namelast, and a field called usaborn 
-- The usaborn field show following: if the player's birthcountry is the USA, then the record is 'USA.'
-- Otherwise, it's 'non-USA.' Order the results by 'non-USA' records first

SELECT namefirst, namelast, 
    CASE 
        WHEN birthcountry = 'USA' THEN 'USA'
        ELSE 'non-USA'
    END AS usaborn
FROM people
ORDER BY 3;

12. Calculate the average height for players throwing with their right hand versus their left hand. 
-- Name these fields right_height and left_height, respectively

SELECT 
    ROUND(AVG(CASE WHEN throws = 'R' THEN height END), 2) AS right_height,
    ROUND(AVG(CASE WHEN throws = 'L' THEN height END), 2) AS left_height
FROM people;

13. Get the average of each team's maximum player salary since 2010. 
-- Hint: WHERE will go outside your CTE.

WITH max_sal_by_team_by_year AS (
    SELECT teamid, yearid, MAX(salary) AS max_sal
    FROM salaries
    GROUP BY 1, 2 
)
SELECT teamid, AVG(max_sal) AS avg_max_sal_since_2010
FROM max_sal_by_team_by_year
WHERE yearid >= 2010
GROUP BY 1;